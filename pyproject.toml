[project]
name = "decathlon_turnover"
version = "0.1.0"
description = ""
readme = "README.md"
licence = ""
authors = ["Youcef"]
classifiers = [
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11"
]

[tool.poetry]
name = "decathlon_turnover"
version = "0.1.0"
description = ""
authors = ["Youcef"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.9"
fastapi = "^0.94.1"
uvicorn = "^0.21.0"
loguru = "^0.6.0"
requests = "^2.28.2"
httpx = "^0.23.3"
python-dotenv = "^1.0.0"

[tool.poetry.group.test.dependencies]
pytest-cov = "^4.0.0"
hypothesis = "^6.69.0"
pyinstrument = "^4.4.0"

[tool.poetry.group.dev.dependencies]
radon = "^5.1.0"
cloc = "^0.2.5"
black = "^23.1.0"
isort = "^5.12.0"
mypy = "^1.1.1"
fire = "^0.5.0"
ruff = "^0.0.256"

[tool.poetry.group.docs.dependencies]
mkdocs-material = "^9.1.3"
mkdocs-minify-plugin = "^0.6.4"
mkdocs-redirects = "^1.2.0"
mkdocstrings = "^0.20.0"
mkdocs-autorefs = "^0.4.1"

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["tests/"]
markers = [
    "api: Web service related tests.",
    "ml: Machine Learning related tests.",
    "data: Data related tests."
]

[tool.black]
line-length = 100

[tool.ruff]
line-length = 100
select = ["E", "F", "W", "C", "B", "I001"]
ignore = [
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
    "E501", # line too long, handled by black
]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.ruff.mccabe]
max-complexity = 10

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.isort]
profile = "black"
src_paths = ["isort"]
lines_after_imports = 2
multi_line_output = 3
skip = [".gitignore", ".dockerignore", ".venv", "^.*"]
extend_skip = [".md", ".json"]
skip_glob = ["docs/*"]
use_parentheses = true

[tool.coverage.run]
parallel = true

[tool.mypy]
check_untyped_defs = true
ignore_errors = false
ignore_missing_imports = true
strict_optional = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
strict_equality = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"